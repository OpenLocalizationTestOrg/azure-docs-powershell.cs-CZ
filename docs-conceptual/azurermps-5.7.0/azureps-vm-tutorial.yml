### YamlMime:Tutorial
title: Vytváření virtuálních počítačů pomocí Azure PowerShellu
metadata:
  title: Vytváření virtuálních počítačů pomocí Azure PowerShellu
  description: Začněte pracovat s Azure PowerShellem tím, že vytvoříte virtuální počítače.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2018
  ms.author: sewhee
  author: sdwheeler
  manager: carmonm
  ms.devlang: azure-powershell
  ms.technology: azure
  ms.openlocfilehash: 41e63eac376d5490a28ba099d0a853b599c6e35f
  ms.sourcegitcommit: 5f0013981fcea1d689649b9a2b2ffe84ae842e56
  ms.translationtype: HT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 04/16/2018
items:
- durationInMinutes: 1
  content: >-
    V tomto kurzu se seznámíte se všemi potřebnými kroky k nastavení virtuálního počítače pomocí Azure PowerShellu. Tento kurz se věnuje také výstupním dotazům, znovupoužití prostředků Azure a vyčištění prostředků.


    Tento kurz můžete dokončit v interaktivním prostředí, které nabízí Azure Cloud Shell, nebo můžete [nainstalovat Azure PowerShell](install-azurerm-ps.md) místně.


    Pomocí klávesové zkratky __Ctrl + Shift + V__ (__Cmd + Shift + V__ v systému macOS) vložíte text z kurzu do služby Azure Cloud Shell.
- durationInMinutes: 1
  title: Přihlásit se
  content: >-
    Pokud používáte místní instalaci Azure PowerShellu, před provedením dalších kroků se musíte přihlásit.


    ```powershell

    Connect-AzureRmAccount

    ```


    Dokončete proces přihlášení podle kroků zobrazených v terminálu.
- durationInMinutes: 1
  title: Vytvoření skupiny prostředků
  content: >-
    V Azure se prostředky přidělují v rámci skupiny správy prostředků. Skupiny prostředků zajišťují logické seskupení prostředků a tím usnadňují práci s nimi jako s kolekcí.

    Pro účely tohoto kurzu se všechny vytvořené prostředky umisťují do jedné skupiny `TutorialResources`.


    ```powershell

    New-AzureRmResourceGroup -Name TutorialResources -Location eastus

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Location          : eastus

    ProvisioningState : Succeeded

    Tags              :

    ResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources

    ```
- durationInMinutes: 1
  title: Vytvoření přihlašovacích údajů správce pro virtuální počítač
  content: >-
    Před vytvořením nového virtuálního počítače musíte vytvořit objekt přihlašovacích údajů obsahující uživatelské jméno a heslo pro účet správce virtuálního počítače s Windows.


    ```powershell

    $cred = Get-Credential -Message "Enter a username and password for the virtual machine."

    ```


    Po zobrazení výzvy zadejte uživatelské jméno a heslo. Výsledný objekt přihlašovacích údajů se předá jako parametr v dalším kroku.


    ```Output

    Windows PowerShell credential request.

    Enter a username and password for the virtual machine.

    User: tutorAdmin

    Password for user tutorAdmin: *********

    ```
- durationInMinutes: 4
  title: Vytvoření virtuálního počítače
  content: >-
    Virtuální počítače v Azure mají velký počet závislostí. Azure PowerShell vytvoří tyto prostředky za vás na základě argumentů příkazového řádku, které zadáte. Z důvodu čitelnosti používáme pro předávání parametrů rutinám Azure PowerShellu [seskupování PowerShellu](/powershell/module/microsoft.powershell.core/about/about_splatting).


    Vytvořte nový virtuální počítač s Windows.


    ```powershell

    $vmParams = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM1'
      Location = 'eastus'
      ImageName = 'Win2016Datacenter'
      PublicIpAddressName = 'tutorialPublicIp'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM1 = New-AzureRmVM @vmParams

    ```

    Po vytvoření virtuálního počítače se zobrazí použité hodnoty parametrů a vytvářené prostředky Azure.

    PowerShell zobrazí indikátor průběhu, jak je uvedeno níže.


    ```Output
     Creating Azure resources
      39% \
      [ooooooooooooooooooooooooooooooooooo                                                                 ]

      Creating TutorialVM1 virtual machine.
    ```


    Jakmile je virtuální počítač připravený, můžeme si prohlédnout výsledky na webu Azure Portal nebo zkontrolováním proměnné \$newVM1.


    ```powershell

    $newVM1

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Id                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1

    VmId              : 12345678-9abc-def0-1234-56789abcedf0

    Name              : TutorialVM1

    Type              : Microsoft.Compute/virtualMachines

    Location          : eastus

    Tags              : {}

    HardwareProfile   : {VmSize}

    NetworkProfile    : {NetworkInterfaces}

    OSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState : Succeeded

    StorageProfile    : {ImageReference, OsDisk, DataDisks}

    ```


    Hodnoty vlastností, které jsou uvedené ve složených závorkách, jsou vnořené objekty. V dalším kroku vám ukážeme, jak zobrazit konkrétní hodnoty v těchto vnořených objektech.
- durationInMinutes: 5
  title: Získání informací o virtuálním počítači pomocí dotazů
  content: >-
    Pojďme získat některé další podrobné informace z virtuálního počítače, který jsme právě vytvořili. V tomto příkladu ověříme název virtuálního počítače a účet správce, který jsme vytvořili.


    ```powershell

    $newVM1.OSProfile | Select-Object ComputerName,AdminUserName

    ```


    ```Output

    ComputerName AdminUsername

    ------------ -------------

    TutorialVM1  tutorialAdmin

    ```


    K získání konkrétních informací o konfiguraci sítě můžeme použít další příkazy Azure PowerShellu.


    ```powershell

    $newVM1 | Get-AzureRmNetworkInterface |
      Select-Object -ExpandProperty IpConfigurations |
        Select-Object Name,PrivateIpAddress
    ```


    V tomto příkladu používáme kanál PowerShellu k odesílání objektu \$newVM1 do rutiny `Get-AzureRmNetworkInterface`. Z výsledného objektu rozhraní sítě volíme vnořený objekt IpConfigurations. Z objektu IpConfigurations volíme vlastnosti Name a PrivateIpAddress.


    ```Output

    Name        PrivateIpAddress

    ----        ----------------

    TutorialVM1 192.168.1.4

    ```


    Abychom potvrdili, že je virtuální počítač spuštěný, je potřeba připojit se přes vzdálenou plochu. K tomu potřebujeme znát veřejnou IP adresu.


    ```powershell

    $publicIp = Get-AzureRmPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources


    $publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}

    ```


    V tomto příkladu používáme `Get-AzureRmPublicIpAddress` a výsledky uložíme v proměnné \$publicIp. Z této proměnné vybíráme vlastnosti a používáme výraz pro načtení vnořené vlastnosti Fqdn.


    ```Output

    Name             IpAddress           FQDN

    ----             ---------           ----

    tutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com

    ```


    Z místního počítače můžete spustit následující příkaz pro připojení k virtuálnímu počítači prostřednictvím Vzdálené plochy.


    ```powershell

    mstsc.exe /v <PUBLIC_IP_ADDRESS>

    ```


    Další informace o vytváření dotazů na vlastnosti objektu najdete v tématu [Zadávání dotazů na prostředky Azure](./queries-azureps.md).
- durationInMinutes: 4
  title: Vytvoření nového virtuálního počítače v existující podsíti
  content: >-
    Druhý virtuální počítač využívá existující podsíť.


    ```powershell

    $vm2Params = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM2'
      ImageName = 'Win2016Datacenter'
      VirtualNetworkName = 'TutorialVM1'
      SubnetName = 'TutorialVM1'
      PublicIpAddressName = 'tutorialPublicIp2'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM2 = New-AzureRmVM @vm2Params


    $newVM2

    ```


    ```Output

    ResourceGroupName        : TutorialResources

    Id                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2

    VmId                     : 12345678-9abc-def0-1234-56789abcedf1

    Name                     : TutorialVM2

    Type                     : Microsoft.Compute/virtualMachines

    Location                 : eastus

    Tags                     : {}

    HardwareProfile          : {VmSize}

    NetworkProfile           : {NetworkInterfaces}

    OSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState        : Succeeded

    StorageProfile           : {ImageReference, OsDisk, DataDisks}

    FullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com

    ```


    Můžete několik kroků přeskočit, abyste získali veřejnou IP adresu nového virtuálního počítače, protože se vrátí ve vlastnosti FullyQualifiedDomainName objektu \$newVM2. Použijte následující příkaz a připojte se pomocí Vzdálené plochy.


    ```powershell

    mstsc.exe /v $newVM2.FullyQualifiedDomainName

    ```
- durationInMinutes: 4
  title: Vyčištění
  content: >-
    Po dokončení kurzu je teď čas vyčistit vytvořené prostředky. Můžete odstranit jednotlivé prostředky pomocí příkazu `Remove-AzureRmResource`, ale nejbezpečnější způsob, jak odebrat všechny prostředky ve skupině prostředků, je odstranit skupinu pomocí příkazu `Remove-AzureRmResourceGroup`.


    ```powershell

    $job = Remove-AzureRmResourceGroup -Name TutorialResources -Force -AsJob


    $job

    ```


    ```Output

    Id     Name            PSJobTypeName   State         HasMoreData     Location             Command

    --     ----            -------------   -----         -----------     --------             -------

    1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzureRmResource...

    ```


    Tento příkaz odebere prostředky vytvořené během kurzu a zaručí jejich uvolnění ve správném pořadí. Parametr `-AsJob` zajišťuje, aby se během odstraňování neblokoval PowerShell. Abyste počkali, než se odstranění dokončí, použijte následující příkaz:


    ```powershell

    Wait-Job -Id $job.Id

    ```


    Po dokončení vyčištění je kurz u konce. Pokračujte k souhrnu všeho, co jste se naučili, a odkazům na zdroje informací, které vám pomůžou v dalších krocích.
- durationInMinutes: 1
  title: Souhrn
  content: "\nBlahopřejeme! Naučili jste se vytvářet virtuální počítače s využitím nových nebo existujících prostředků, pomocí výrazů a dalších příkazů Azure PowerShellu jste zachytili data k uložení do proměnných prostředí a prohlédli jste si několik prostředků, které se generují pro virtuální počítače Azure.\n\nKam budou směřovat vaše další kroky záleží na tom, jak chcete Azure PowerShell použít. Existuje široká škála materiálů, které podrobněji popisují funkce zmíněné v tomto kurzu.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Podrobná dokumentace k PowerShellu\n\nMůžete chtít prostudovat si celou sadu [dokumentace k Azure PowerShellu](overview.md).\n\nDalší informace o příkazech použitých v tomto kurzu najdete v následujících článcích.\n\n- [New-AzureRmResourceGroup](/powershell/module/azurerm.resources/new-azurermresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzureRmVM](/powershell/module/azurerm.compute/new-azurermvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzureRmPublicIpAddress](/powershell/module/azurerm.network/get-AzureRmPublicIpAddress)\n- [Remove-AzureRmResourceGroup](/powershell/module/azurerm.resources/Remove-AzureRmResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nExistují také články, které se podrobněji zabývají funkcemi ukázanými v tomto kurzu.\n\n- [Seskupování PowerShellu](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Dotazy](queries-azureps.md)\n- [Formátování](formatting-output.md)\n- [Použití úloh PowerShellu](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Ukázkové skripty\n\nPokud chcete rovnou začít s konkrétními úlohami, prohlédněte si některé ukázkové skripty.\n\n- [Virtuální počítače s Linuxem](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Virtuální počítače s Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Web Apps](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Databáze SQL](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Databáze Cosmos](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Váš názor\n\nPokud se chcete podělit o své zkušenosti a návrhy nebo položit dotazy, můžete se s námi spojit několika způsoby.\n\n* `Send-Feedback` je integrovaný příkaz pro Azure PowerShell, který umožňuje poskytování zpětné vazby týmu ve volném formátu.\n* Podat žádost o funkci nebo nahlásit chybu můžete v [úložišti Azure PowerShellu](https://github.com/Azure/azure-powershell/issues).\n* Položit dotaz nebo získat další informace můžete založením problému v [úložišti dokumentace k Azure PowerShellu](https://github.com/Azure/azure-docs-powershell/issues).\n\nDoufáme, že jste s novým Azure PowerShellem spokojení."
